#include <gtest/gtest.h>
#include <vector>
#include <string>
#include "assoc.h"

using namespace std;

#include "solution.cpp"

class CSCITest : public ::testing::TestWithParam<association<vector<string>,bool>> {};

TEST_P(CSCITest, sum) {
	auto in = GetParam().key;
	auto out = GetParam().value;
	EXPECT_EQ(out, has_solution(in));
}	


association<vector<string>,bool> testvals[] = {
{{
"#####",
"#o.*#",
"#####"}, true},
{{
"#####",
"#o#*#",
"#####"}, false},
{{
"o*"}, true},
{{
"o#*"}, false},
{{
"..*",
"o##"}, true},
{{
"...#.*",
".#.###",
".#.#.#",
"o#...."}, false},
{{
"########",
"#.##..*#",
"#.##.###",
"#.#..###",
"#.##...#",
"#o...#.#",
"########"}, true},
{{
"############",
"#.#......#.#",
"#.#.######.#",
"#.#........#",
"#.#.######.#",
"#.#....#...#",
"#.###.*#.#.#",
"#...####.#.#",
"#.#.#..#.#.#",
"#.#.#.##.#.#",
"#o#......#.#",
"############"}, true},
{{
"...o",
"....",
"....",
"....",
"*..."}, true},
{{
"...o",
"#...",
".#..",
"..#.",
"*..#"}, false},
{{
"############",
"#..#*#...#.#",
"#.##.#.###.#",
"#..........#",
"##.#.#####.#",
"#..#.#.#...#",
"#.##...#.#.#",
"#..#####.#.#",
"##.##..#.#.#",
"#...#.##.#.#",
"#.#.o....#.#",
"############"}, true},
{{
"############",
"#..#*#...#.#",
"#.##.#.###.#",
"#..........#",
"###.#.#.##.#",
"#..#.#.#..##",
"#.##...#.#.#",
"#..#####.#.#",
"##.##..#.#.#",
"#...#.##.#.#",
"#.#.o....#.#",
"############"}, false}
};
	
INSTANTIATE_TEST_CASE_P(inputs, CSCITest, ::testing::ValuesIn(testvals));

