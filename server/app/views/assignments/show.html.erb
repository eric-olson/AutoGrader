<div class="row" >
  <% provide(:title, @assignment.name) %>
  <div class="row" style="height: 500px;">
    <div class="col-md-12">
      <div id="status_div">
        <% flash.each do |type, message| %>
        <div class="alert <%= bootstrap_class_for(type) %> fade in">
          <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
          <%= message %>
        </div>
        <% end %>
      </div>
      <h4>Test Results</h4>
      <div id="progress_bar_container" class="progress progress-bar-segmented">
      </div>
      <div class="modal fade" id="error_modal" role="dialog">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close modal-close" data-dismiss="modal">&times;</button>
              <h4 class="modal-title">Some error</h4>
            </div>
            <div class="modal-body">
              <p>Test modal</p>
            </div>
            <div class="modal-footer">
              <p>HEY</P>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div id="descriptionPanel" class="panel panel-default" >

        <div class="panel-heading">
          <h3 class="panel-title"><%= @assignment.name %></h3>
        </div>
        <div class="panel-body" >

          <div id="description">
            <%= @assignment.description.html_safe %>
          </div>

          <div class="btn-group btn-group-justified" role="group" aria-label="...">
            <div class="btn-group" role="group" id="test_btn">
              <button type="button" class="btn btn-default" data-toggle="tooltip" title="Test if your code works">Test</button>
            </div>
            <div class="btn-group" role="group" id="submit_btn">
              <button type="button" class="btn btn-default" data-toggle="tooltip" title="Submit your code to be graded" data-container="body">Submit</button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-8">
      <div id="editorPanel" class="panel panel-default" >
        <div class="panel-heading">
          <h3 class="panel-title">Editor</h3>


          <div id="header-button-container">
            <div class="btn-group btn-group-justified" id="editor-btn-group" role="group" aria-label="...">
              <div class="btn-group" role="group">
                <span>
                  <button type="button" id="btn-restart" class="btn btn-default btn-sm btn-editor-header" data-toggle="tooltip" data-placement="bottom" title="Reset">
                    <span class="glyphicon glyphicon-file"></span>
                  </button>
                </span>
              </div>
              <div class="btn-group" role="group">
                <span>
                  <button type="button" id="btn-save" class="btn btn-default btn-sm btn-editor-header" data-toggle="tooltip" data-placement="bottom" title="Save">
                    <span class="glyphicon glyphicon-floppy-save"></span>
                  </button>
                </span>
              </div>
              <div class="btn-group" role="group">
                <span data-toggle="modal" data-target="#upload_modal">
                  <button type="button" id="btn-upload" class="btn btn-default btn-sm btn-editor-header" data-toggle="tooltip" data-placement="bottom" title="Upload">
                    <span class="glyphicon glyphicon-cloud-upload"></span>
                  </button>
                </span>
              </div>
              <div class="btn-group" role="group">
                <span data-toggle="modal" data-target="#download_modal">
                  <button type="button" id="btn-download" class="btn btn-default btn-sm btn-editor-header" data-toggle="tooltip"
                  data-placement="bottom" title="Download">
                  <span class="glyphicon glyphicon-cloud-download"></span>
                </button>
              </span>
            </div>
          </div>
        </div>

      </div>
      <div class="panel-body" id="editor-panel-body">
        <div id="editor"><%= @editor_file_contents %></div>
      </div>
    </div>

    <div class="modal fade" id="upload_modal" role="dialog">
      <div class="modal-dialog modal-sm">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close modal-close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Upload Code</h4>
          </div>
          <div class="modal-body">
            <p> This will overwrite any code you have saved. </p>
            <%= form_tag({:action => "uploadCode", :id => @assignment.id}, :multipart => true, :method => 'post') do %>
            <span class="input-group">
              <span class="btn btn-info btn-file input-group-btn" style="border-top-right-radius: 0px;border-bottom-right-radius: 0px;font-size: 14px;">
                Browse
                <%= file_field_tag('assignment_file', :class => 'btn btn-info', onchange: "$(this).parent().parent().find('.form-control').html($(this).val().split(/[\\\\|/]/).pop());") %>
              </span>
              <span class="form-control" id="form-file-name">
                <span id="default-filler">Select a file</span>
              </span>
            </span>
          </div>
          <div class="modal-footer">
            <%= submit_tag("Upload", :class => "btn btn-success") %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

    <div class="modal fade" id="download_modal" role="dialog">
      <div class="modal-dialog modal-sm">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close modal-close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Download Code</h4>
          </div>
          <div class="modal-body">
            <p>This will only download the code you have saved. Would you like to save your code first?</p>
          </div>
          <div class="modal-footer">
            <%= form_tag({:action => "downloadCode", :id => @assignment.id}, :multipart => true, :method => 'post') do%>
            <%= hidden_field_tag 'editor-text-hidden'%>
            <%= submit_tag("Yes", :class => "btn btn-success", :id => "btn-download-yes") %>
            <%= submit_tag("No", :class => "btn btn-danger", :id => "btn-download-no") %>
            <% end %>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>
</div>

<script>

var close_requests = 0;

function fillHiddenEditorText() {
  $('#editor-text-hidden').val(getEditorContents());
}

function getEditorContents() {
  return editor.getValue();
}

function stopResizing() {
  $('#editor').stop();
  $('#descriptionPanel').stop();
  $('#description').stop();
}

function resizeToSmaller() {
  stopResizing();
  $('#editor').height($(window).height() - 287);
  $('#descriptionPanel').height($(window).height() - 250);
  $('#description').height($(window).height() - 360);
}

function resizeToFull() {
  stopResizing();
  $('#editor').height($(window).height() - 227);
  $('#descriptionPanel').height($(window).height() - 190);
  $('#description').height($(window).height() - 300);
}

function resizeToFullAnimated() {
  stopResizing();
  $('#editor').animate({height:$(window).height() - 227}, 500);
  $('#descriptionPanel').animate({height:$(window).height() - 190}, 500);
  $('#description').animate({height:$(window).height() - 300}, 500);
}

function getAnimatedProgressBar() {
  return '<div class="progress-bar progress-bar-striped active progress-bar-testing" role="progressbar">Running Tests</div>';
}

function getServerErrorProgressBar() {
  return '<div class="progress-bar progress-bar-error" role="progressbar">Server Error</div>';
}

// message can be whatever
// alert_class must be one of:
//    alert-success
//    alert-info
//    alert-warning
//    alert-danger
function buildAlertBox(message, alert_class) {
  resizeToSmaller();
  autoCloseAlert();

  return '<div class="alert ' + alert_class + ' fade in"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>' + message + '</div>'
}

function buildAlertBoxSuccess(message) {
  return buildAlertBox(message, "alert-success");
}

function buildAlertBoxInfo(message) {
  return buildAlertBox(message, "alert-info");
}

function buildAlertBoxWarning(message) {
  return buildAlertBox(message, "alert-warning");
}

function buildAlertBoxDanger(message) {
  return buildAlertBox(message, "alert-danger");
}

function hasAlert() {
  return $('.alert').length == 1;
}

function requestClose() {
  close_requests++;
}

function suppressRequest() {
  close_requests--;
}

function shouldClose() {
  return close_requests == 1;
}

function autoCloseAlert() {
  requestClose();
  window.setTimeout(function() {
    if (shouldClose()) {
      resizeToFullAnimated();
      $(".alert").slideUp(500, function(){
        $(this).remove();
      });
    }
    suppressRequest();
  }, 2000);
}

var editor = ace.edit("editor");
editor.$blockScrolling = Infinity;

$( document ).ready(function() {
  if (hasAlert()) {
    is_full_size = false;
  } else {
    is_full_size = true;
  }

  //listen for changes
  $(window).resize(function() {
    if (hasAlert()) {
      resizeToSmaller();
    } else {
      resizeToFull();
    }
  });

  //set initially
  if (hasAlert()) {
    autoCloseAlert();
    resizeToSmaller();
  } else {
    resizeToFull();
  }

  editor.setTheme("ace/theme/chrome");
  editor.getSession().setMode("ace/mode/c_cpp");

  $('[data-toggle="tooltip"]').tooltip();

});

$('#test_btn').on('click', function() {
  $('#progress_bar_container').html(getAnimatedProgressBar());

  $.ajax({
    type: 'post',
    url: 'testCode',
    data: {editor_text:getEditorContents(),id:<%=@assignment.id%>},
    success: function(response) {
      // Load the progress bar with the html from the response
      $('#progress_bar_container').html(response.progress_bar_html);
      // Enable popovers
      $('[data-toggle="popover"]').popover();
    },
    error: function(jqXHR, textStatus, errorThrown) {
      $('#progress_bar_container').html(getServerErrorProgressBar());
    }
  });
  return false;
});

$('#submit_btn').on('click', function() {
  $('#progress_bar_container').html(getAnimatedProgressBar());

  $.ajax({
    type: 'post',
    url: 'submitCode',
    data: {editor_text:getEditorContents(),id:<%=@assignment.id%>},
    success: function(response) {
      // Load the progress bar with the html from the response
      $('#progress_bar_container').html(response.progress_bar_html);
      // Enable popovers
      $('[data-toggle="popover"]').popover();
    },
    error: function(jqXHR, textStatus, errorThrown) {
      $('#progress_bar_container').html(getServerErrorProgressBar());
    }
  });
  return false;
});

$('#btn-save').on('click', function() {
  $.ajax({
    type: 'post',
    url: 'saveCode',
    data: {editor_text:getEditorContents(),id:<%=@assignment.id%>},
    success: function(response) {
      $('#status_div').html(buildAlertBox("File saved successfully!", "alert-success"));
    }
  });
});

$('#btn-restart').on('click', function() {
  $.ajax({
    type: 'post',
    url: 'restartCode',
    data: {editor_text:getEditorContents(),id:<%=@assignment.id%>},
    success: function(response) {
      $('#status_div').html(buildAlertBox("Reset file to the default spec.", "alert-success"));
      editor.setValue(response.new_editor_content, -1);
    }
  });
});

$('#btn-download').on('click', function() {
  fillHiddenEditorText();
});

$('#btn-download-yes').on('click', function() {
  $('#download_modal').modal('hide');
});

$('#btn-download-no').on('click', function() {
  $('#download_modal').modal('hide');
});

</script>
