<div class="row" >
  <% provide(:title, @assignment.name) %>
  <div class="row" style="height: 500px;">
    <div class="col-md-12">
      <div id="status_div">
        <% flash.each do |type, message| %>
        <div class="alert <%= bootstrap_class_for(type) %> fade in">
          <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
          <%= message %>
        </div>
        <% end %>
      </div>
      <h4>Test Results</h4>
      <div id="progress_bar_container" class="progress progress-bar-segmented">
      </div>
    </div>
    <div class="col-md-4">
      <div id="descriptionPanel" class="panel panel-default" >

        <div class="panel-heading">
          <h3 class="panel-title">Assignment Description</h3>
        </div>
        <div class="panel-body" >

          <div id="description" style="overflow: scroll;">
            <h1 class="panel-title"><%= @assignment.name %></h1>
            <%= @assignment.description.html_safe %>
          </div>

          <div class="btn-group btn-group-justified" role="group" aria-label="...">
            <div class="btn-group" role="group" id="restart_btn">
              <button type="button" class="btn btn-default">Restart</button>
            </div>

            <div class="btn-group" role="group" id="test_btn">
              <button type="button" class="btn btn-default">Test</button>
            </div>

            <div class="btn-group" role="group">
              <button type="button" class="btn btn-default" id="save_btn">Save</button>
            </div>

            <div class="btn-group" role="group">
              <button type="button" class="btn btn-default">Submit</button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="col-md-8">
      <div id="editorPanel" class="panel panel-default" >
        <div class="panel-heading">
          <h3 class="panel-title">Editor</h3>


          <div id="header-button-container">
            <button type="button" class="btn btn-sm" data-toggle="modal" data-target="#upload_modal">
              <span class="glyphicon glyphicon-open"></span>
            </button>
            <button type="button" class="btn btn-sm" data-toggle="modal" data-target="#download_modal">
              <span class="glyphicon glyphicon-save"></span>
            </button>
          </div>

        </div>
        <div class="panel-body" id="editor-panel-body">
          <div id="editor"><%= @editor_file_contents %></div>
        </div>
      </div>

      <div class="modal fade" id="upload_modal" role="dialog">
        <div class="modal-dialog modal-sm">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal">&times;</button>
              <h4 class="modal-title">Upload Code</h4>
            </div>
            <div class="modal-body">
              <p> This will overwrite any code you have saved </p>

            </div>
            <div class="modal-footer">
              <%= form_tag({:action => "uploadCode", :id => @assignment.id}, :multipart => true, :method => 'post') do %>
              <%= file_field_tag 'assignment_file' %>
              <%= submit_tag("Upload") %>
              <% end %>
            </div>
          </div>
        </div>
      </div>

      <div class="modal fade" id="download_modal" role="dialog">
        <div class="modal-dialog modal-sm">
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal">&times;</button>
              <h4 class="modal-title">Download Code</h4>
            </div>
            <div class="modal-body">
              <p> This will only download the code you have saved. Would you like to save first? </p>
            </div>
            <div class="modal-footer">
              <%= link_to("Yes", {:action => "downloadCode", :id => @assignment.id, :save => false}, :method => 'post') %>
              <%= link_to("No", {:action => "downloadCode", :id => @assignment.id, :save => true}, :method => 'post') %>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

<script>

var close_requests = 0;

function stopResizing() {
  $('#editor').stop();
  $('#descriptionPanel').stop();
  $('#description').stop();
}

function resizeToSmaller() {
  stopResizing();
  $('#editor').height($(window).height() - 287);
  $('#descriptionPanel').height($(window).height() - 250);
  $('#description').height($(window).height() - 350);
}

function resizeToFull() {
  stopResizing();
  $('#editor').height($(window).height() - 227);
  $('#descriptionPanel').height($(window).height() - 190);
  $('#description').height($(window).height() - 290);
}

function resizeToFullAnimated() {
  stopResizing();
  $('#editor').animate({height:$(window).height() - 227}, 500);
  $('#descriptionPanel').animate({height:$(window).height() - 190}, 500);
  $('#description').animate({height:$(window).height() - 290}, 500);
}

function getAnimatedProgressBar() {
  return '<div class="progress-bar progress-bar-striped active progress-bar-testing" role="progressbar">Running Tests</div>';
}

function getServerErrorProgressBar() {
  return '<div class="progress-bar progress-bar-error" role="progressbar">Server Error</div>';
}

// message can be whatever
// alert_class must be one of:
//    alert-success
//    alert-info
//    alert-warning
//    alert-danger
function buildAlertBox(message, alert_class) {
  resizeToSmaller();
  autoCloseAlert();

  return '<div class="alert ' + alert_class + ' fade in"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>' + message + '</div>'
}

function buildAlertBoxSuccess(message) {
  return buildAlertBox(message, "alert-success");
}

function buildAlertBoxInfo(message) {
  return buildAlertBox(message, "alert-info");
}

function buildAlertBoxWarning(message) {
  return buildAlertBox(message, "alert-warning");
}

function buildAlertBoxDanger(message) {
  return buildAlertBox(message, "alert-danger");
}

function hasAlert() {
  return $('.alert').length == 1;
}

function requestClose() {
  close_requests++;
}

function suppressRequest() {
  close_requests--;
}

function shouldClose() {
  return close_requests == 1;
}

function autoCloseAlert() {
  requestClose();
  window.setTimeout(function() {
    if (shouldClose()) {
      resizeToFullAnimated();
      $(".alert").slideUp(500, function(){
        $(this).remove();
      });
    }
    suppressRequest();
  }, 2000);
}

var editor = ace.edit("editor");
editor.$blockScrolling = Infinity;

$( document ).ready(function() {
  if (hasAlert()) {
    is_full_size = false;
  } else {
    is_full_size = true;
  }

  //listen for changes
  $(window).resize(function() {
    if (hasAlert()) {
      resizeToSmaller();
    } else {
      resizeToFull();
    }
  });

  //set initially
  if (hasAlert()) {
    autoCloseAlert();
    resizeToSmaller();
  } else {
    resizeToFull();
  }

  editor.setTheme("ace/theme/chrome");
  editor.getSession().setMode("ace/mode/c_cpp");
});

$('#test_btn').on('click', function() {
  $('#progress_bar_container').html(getAnimatedProgressBar());

  $.ajax({
    type: 'post',
    url: 'testCode',
    data: {editor_text:editor.getValue(),id:<%=@assignment.id%>},
    success: function(response) {
      // Load the progress bar with the html from the response
      $('#progress_bar_container').html(response.progress_bar_html);
      // Enable popovers
      $('[data-toggle="popover"]').popover();
    },
    error: function(jqXHR, textStatus, errorThrown) {
      $('#progress_bar_container').html(getServerErrorProgressBar());
    }
  });
  return false;
});

$('#save_btn').on('click', function() {
  $.ajax({
    type: 'post',
    url: 'saveCode',
    data: {editor_text:editor.getValue(),id:<%=@assignment.id%>},
    success: function(response) {
      $('#status_div').html(buildAlertBox("File saved successfully!", "alert-success"));
    }
  });
});

$('#restart_btn').on('click', function() {
  $.ajax({
    type: 'post',
    url: 'restartCode',
    data: {editor_text:editor.getValue(),id:<%=@assignment.id%>},
    success: function(response) {
      $('#status_div').html(buildAlertBox("Reset file to the default spec.", "alert-success"));
      editor.setValue(response.new_editor_content, -1);
    }
  });
});

</script>
